.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem 1rem;
}

.title {
  font-size: 2.5rem;
  font-weight: 700;
  margin-bottom: 0.5rem;
  color: #FFD700;
  text-align: center;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.subtitle {
  font-size: 1.2rem;
  color: #e0e0e0;
  text-align: center;
  margin-bottom: 3rem;
}

.eventsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 2rem;
  margin-bottom: 4rem;
}

.eventCard {
  background: #1a1a1a;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  height: 100%;
  display: flex;
  flex-direction: column;
  border: 1px solid #2a2a2a;
}

/* Clickable card styles */
.clickableCard {
  cursor: pointer !important;
  position: relative;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.clickableCard:hover {
  cursor: pointer !important;
  transform: translateY(-5px) scale(1.02);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
}

.clickableCard:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(255, 215, 0, 0.5);
}

.clickableCard:after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: 12px;
  opacity: 0;
  background: radial-gradient(circle, rgba(255, 215, 0, 0.1) 0%, rgba(255, 215, 0, 0) 70%);
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.clickableCard:hover:after {
  opacity: 1;
}

.eventImageContainer {
  position: relative;
  width: 100%;
  padding-bottom: 100%; /* Creates a square aspect ratio (1:1) */
  background: #141414;
  overflow: hidden;
  max-height: none; /* Remove any max-height constraints */
}

.eventImage {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  transition: transform 0.3s ease;
}

.clickableCard:hover .eventImage {
  transform: scale(1.1);
}

/* Badge container with black background */
.badgeContainer {
  position: absolute;
  top: 10px;
  left: 0;
  right: 0;
  width: 100%;
  z-index: 3;
  padding: 0 15px;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
}

/* Black background for the badge container */
.badgeContainer::before {
  content: "";
  position: absolute;
  top: -4px;
  left: 0;
  right: 0;
  bottom: -4px;
  background-color: rgba(0, 0, 0, 0.75);
  border-radius: 24px;
  z-index: -1;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.4);
}

/* Two badges layout */
.twoBadges {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  width: 100%;
}

.twoBadges .eventStatusBadge {
  grid-column: 1;
  justify-self: flex-start;
}

.twoBadges .eventModeBadge {
  grid-column: 2;
  justify-self: center;
}

.twoBadges .registeredBadge {
  grid-column: 3;
  justify-self: flex-end;
}

/* Three badges layout */
.threeBadges {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  width: 100%;
}

.threeBadges .eventStatusBadge {
  grid-column: 1;
  justify-self: flex-start;
}

.threeBadges .eventModeBadge {
  grid-column: 2;
  justify-self: center;
}

.threeBadges .registeredBadge {
  grid-column: 3;
  justify-self: flex-end;
}

/* Status-based badge container styling */
.completedBadges,
.progressBadges,
.fullBadges {
  justify-content: space-between;
  width: 100%;
}

/* Single badge layout */
.singleBadge {
  justify-content: flex-start;
}

/* Fix badge positioning for all cases */
.singleBadge, 
.twoBadges, 
.threeBadges,
.completedBadges,
.progressBadges,
.fullBadges {
  width: 100%;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
}

/* Status badge - always on the left */
.singleBadge .eventStatusBadge,
.twoBadges .eventStatusBadge,
.threeBadges .eventStatusBadge,
.completedBadges .eventStatusBadge,
.progressBadges .eventStatusBadge,
.fullBadges .eventStatusBadge {
  grid-column: 1;
  justify-self: flex-start;
}

/* Mode badge - always in the center */
.singleBadge .eventModeBadge,
.twoBadges .eventModeBadge,
.threeBadges .eventModeBadge,
.completedBadges .eventModeBadge,
.progressBadges .eventModeBadge,
.fullBadges .eventModeBadge {
  grid-column: 2;
  justify-self: center;
}

/* Registered badge - always on the right */
.singleBadge .registeredBadge,
.twoBadges .registeredBadge,
.threeBadges .registeredBadge,
.completedBadges .registeredBadge,
.progressBadges .registeredBadge,
.fullBadges .registeredBadge {
  grid-column: 3;
  justify-self: flex-end;
}

/* Make sure badges have proper sizing */
.eventStatusBadge,
.registeredBadge,
.eventModeBadge {
  white-space: nowrap;
  min-width: fit-content;
}

/* Explicitly position each badge type in the grid */
.eventStatusBadge {
  grid-column: 1;
  justify-self: flex-start;
}

.eventModeBadge {
  grid-column: 2;
  justify-self: center;
}

.registeredBadge {
  grid-column: 3;
  justify-self: flex-end;
}

.eventStatusBadge {
  position: relative;
  padding: 0.25rem 0.75rem;
  border-radius: 20px;
  font-size: 0.8rem;
  font-weight: 600;
  color: white;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  border: 2px solid rgba(0, 0, 0, 0.5);
  text-transform: uppercase;
}

.registeredBadge {
  position: relative;
  padding: 0.25rem 0.75rem;
  border-radius: 20px;
  font-size: 0.8rem;
  font-weight: 600;
  color: white;
  background-color: #28a745;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  display: flex;
  align-items: center;
  gap: 4px;
  border: 2px solid rgba(0, 0, 0, 0.5);
}

.eventModeBadge {
  position: relative;
  padding: 0.25rem 0.75rem;
  border-radius: 20px;
  font-size: 0.8rem;
  font-weight: 600;
  color: white;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  border: 2px solid rgba(0, 0, 0, 0.5);
}

/* Remove the individual badge backgrounds since we now have a container background */
.eventStatusBadge::before,
.registeredBadge::before,
.eventModeBadge::before {
  display: none;
}

.modeSolo {
  background-color: #6610f2; /* Purple for solo */
}

.modeDuo {
  background-color: #fd7e14; /* Orange for duo */
}

.modeTeam {
  background-color: #20c997; /* Teal for team */
}

.statusUpcoming {
  background-color: #FFD700;
  color: #121212;
}

.statusInProgress {
  background-color: #17a2b8;
  color: white;
}

.statusCompleted {
  background-color: #6c757d;
  color: white;
}

.fallbackImage {
  background: linear-gradient(135deg, #2a2a2a, #1a1a1a);
  position: absolute !important;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.eventImagePlaceholder {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, #2a2a2a, #1a1a1a);
}

.placeholderText {
  font-size: 6rem;
  font-weight: 800;
  color: #FFD700;
  text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.eventContent {
  padding: 1.5rem;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  cursor: pointer;
}

.eventTitle {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 1rem;
  color: #FFD700;
}

.eventTitle a {
  color: #FFD700;
  text-decoration: none;
  transition: color 0.2s ease;
}

.eventTitle a:hover {
  color: #FFC107;
  text-decoration: underline;
}

.eventMeta {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-bottom: 1rem;
  color: #e0e0e0;
}

.eventDate,
.eventTime,
.eventLocation,
.eventGame,
.eventRegistrations {
  display: flex;
  align-items: center;
  font-size: 0.95rem;
}

.eventGame {
  color: #FFD700;
}

.eventRegistrations {
  color: #4CAF50;
  font-weight: 500;
}

.metaIcon {
  margin-right: 0.5rem;
  font-size: 1.1rem;
}

.eventDescription {
  margin-bottom: 1.5rem;
  color: #b0b0b0;
  line-height: 1.5;
  flex-grow: 1;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

.eventActions {
  display: flex;
  justify-content: center;
  margin-top: auto;
  padding: 0 1.5rem 1.5rem;
}

.registerButton {
  padding: 0.75rem 1.5rem;
  background-color: #FFD700;
  color: #000000;
  border: none;
  border-radius: 4px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s;
  width: 100%;
  text-align: center;
}

.registerButton:hover:not(:disabled) {
  background-color: #FFC107;
  transform: translateY(-2px);
}

.registerButton:disabled {
  opacity: 0.7;
  cursor: not-allowed;
}

.registeredButton {
  background-color: #28a745;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.registeredButton::before {
  content: "âœ“";
  font-weight: bold;
}

.nonClickable {
  cursor: default;
  pointer-events: none;
}

.nonClickable:hover:not(:disabled) {
  background-color: #28a745;
  transform: none;
}

.registeredButton:hover:not(:disabled) {
  background-color: #218838;
  transform: translateY(-2px);
}

.loadingButton {
  background-color: #6c757d;
  cursor: wait;
}

.loadingButton:hover:not(:disabled) {
  background-color: #5a6268;
  transform: translateY(-2px);
}

.completedButton {
  background-color: #6c757d;
  color: white;
}

.inProgressButton {
  background-color: #ffc107;
  color: black;
}

.fullButton {
  background-color: #dc3545;
  color: white;
}

.fullButton:hover:not(:disabled) {
  background-color: #c82333;
  transform: translateY(-2px);
}

.readMoreButton {
  padding: 0.5rem 1.5rem;
  background-color: transparent;
  color: #e0e0e0;
  border: 1px solid #2a2a2a;
  border-radius: 4px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s;
}

.readMoreButton:hover {
  background-color: rgba(255, 255, 255, 0.05);
  transform: translateY(-2px);
  color: #FFD700;
  border-color: #FFD700;
}

.primaryAction {
  border-color: #FFD700;
  color: #FFD700;
  font-weight: 700;
  box-shadow: 0 0 0 1px rgba(255, 215, 0, 0.3);
}

.primaryAction:hover {
  background-color: rgba(255, 215, 0, 0.1);
  transform: translateY(-2px);
}

/* Loading State */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 300px;
  color: #e0e0e0;
}

.emptyContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 300px;
  text-align: center;
  background: #1a1a1a;
  border-radius: 12px;
  padding: 2rem;
  margin-bottom: 3rem;
  border: 1px solid #2a2a2a;
}

.emptyIcon {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.emptyContainer h2 {
  font-size: 1.8rem;
  color: #FFD700;
  margin-bottom: 0.5rem;
}

.emptyContainer p {
  color: #e0e0e0;
  margin-bottom: 1.5rem;
}

.resetButton {
  padding: 0.5rem 1.5rem;
  background-color: #FFD700;
  color: #000000;
  border: none;
  border-radius: 4px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s;
}

.resetButton:hover {
  background-color: #FFC107;
  transform: translateY(-2px);
}

.loader {
  border: 4px solid rgba(255, 215, 0, 0.1);
  border-radius: 50%;
  border-top: 4px solid #FFD700;
  width: 40px;
  height: 40px;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.header {
  margin-bottom: 2rem;
  text-align: center;
}

.filters {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
  justify-content: center;
  margin-top: 1.5rem;
}

.filterButton {
  background: transparent;
  color: #e0e0e0;
  border: 1px solid #2a2a2a;
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.filterButton:hover {
  background: rgba(255, 215, 0, 0.1);
  border-color: #FFD700;
  color: #FFD700;
}

.filterActive {
  background: #FFD700;
  color: #000000;
  border-color: #FFD700;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .eventsGrid {
    grid-template-columns: 1fr;
  }
  
  .title {
    font-size: 2rem;
  }
  
  .subtitle {
    font-size: 1rem;
  }
}

@media (max-width: 480px) {
  .container {
    padding: 1.5rem 1rem;
  }
  
  .title {
    font-size: 1.8rem;
  }
  
  .eventCard {
    border-radius: 8px;
  }
  
  /* Remove fixed height to maintain square aspect ratio */
  .eventImageContainer {
    padding-bottom: 100%; /* Maintain square aspect ratio */
  }
}

.hiddenLoader {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.clickableCard * {
  cursor: pointer !important;
}

.clickableCard button {
  cursor: pointer;
}

.clickableCard .registerButton:disabled {
  cursor: not-allowed !important;
}

/* Completed event card style - use default cursor */
.completedCard,
.completedCard:hover {
  cursor: default !important;
}

.completedCard * {
  cursor: default !important;
}

/* Still allow proper cursor on buttons */
.completedCard button {
  cursor: pointer;
}

.completedCard .registerButton:disabled {
  cursor: not-allowed !important;
} 