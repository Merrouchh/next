.banner {
  width: 100%;
  max-width: 700px;
  margin: 0 auto 2rem;
  background: rgba(26, 26, 26, 0.95);
  border-radius: 12px;
  padding: 0.75rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.header {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0.75rem;
}

.header h3 {
  font-size: 1rem;
  color: #FFD700;
  margin: 0;
}

.uploadsList {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.uploadItem {
  display: flex;
  gap: 0.75rem;
  padding: 0.75rem;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 8px;
  animation: slideIn 0.3s ease;
}

.uploadInfo {
  flex: 1;
  min-width: 0; /* Prevent flex item from overflowing */
}

.title {
  display: block;
  font-size: 0.9rem;
  font-weight: 500;
  margin-bottom: 0.4rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.metadata {
  display: flex;
  gap: 0.75rem;
  font-size: 0.8rem;
  color: #888;
  flex-wrap: wrap;
}

.statusContainer {
  min-width: 180px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 0.4rem;
}

.progressBar {
  width: 100%;
  height: 3px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 2px;
  overflow: hidden;
}

.progressFill {
  height: 100%;
  transition: width 0.3s ease;
}

.status {
  font-size: 0.85rem;
  text-align: center;
}

/* Mobile styles */
@media (max-width: 768px) {
  .banner {
    margin: 1rem;
    padding: 0.75rem;
    border-radius: 8px;
  }

  .uploadItem {
    flex-direction: column;
    padding: 0.75rem;
    gap: 0.75rem;
  }

  .metadata {
    gap: 0.5rem;
    font-size: 0.8rem;
  }

  .statusContainer {
    min-width: unset;
    width: 100%;
  }

  .title {
    font-size: 0.95rem;
  }

  .status {
    font-size: 0.85rem;
  }

  .header h3 {
    font-size: 1rem;
  }
}

/* Animation for new items */
@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Animation for completed items */
.fadeOut {
  animation: fadeOut 0.5s ease forwards;
}

@keyframes fadeOut {
  to {
    opacity: 0;
    transform: translateY(-10px);
  }
}

/* Pulse animation for progress bars */
.pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Status-specific styles */
.uploadItem[data-status='error'] {
  background: rgba(244, 67, 54, 0.1);
}

.uploadItem[data-status='error'] .progressFill {
  background: #f44336;
}

.uploadItem[data-status='ready'] {
  background: rgba(76, 175, 80, 0.1);
}

.uploadItem[data-status='ready'] .progressFill {
  background: #4CAF50;
}

/* Processing animation */
@keyframes pulse {
  0% { opacity: 0.6; }
  50% { opacity: 1; }
  100% { opacity: 0.6; }
}

.uploadItem[data-status='processing'] .progressFill {
  animation: pulse 2s infinite;
  background: #2196F3;
}

/* Queue number style */
.queueNumber {
  display: inline-flex;
  align-items: center;
  margin-left: 10px;
  padding: 2px 8px;
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  font-size: 0.85em;
  color: #fff;
}

/* Update the processing animation */
.uploadItem[data-status='processing'] .progressFill,
.uploadItem[data-status='inprogress'] .progressFill {
  animation: progressPulse 2s infinite;
}

.uploadItem[data-status='pendingupload'] .status,
.uploadItem[data-status='queued'] .status {
  animation: textPulse 1.5s infinite;
}

@keyframes progressPulse {
  0% { opacity: 1; }
  50% { opacity: 0.6; }
  100% { opacity: 1; }
}

@keyframes textPulse {
  0% { opacity: 0.7; }
  50% { opacity: 1; }
  100% { opacity: 0.7; }
}

/* Add these styles */
.resolution, .duration {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  padding: 2px 6px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
}

/* Add pulsing animation for queued state */
.progressFill.pulse {
  animation: progressPulse 2s infinite;
  opacity: 0.8;
}

/* Update the queued state styling */
.uploadItem[data-status='queued'] {
  background: rgba(255, 152, 0, 0.05);
}

.uploadItem[data-status='queued'] .progressBar {
  position: relative;
  overflow: visible;
}

.uploadItem[data-status='queued'] .progressFill {
  position: relative;
}

.uploadItem[data-status='queued'] .progressFill::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  height: 100%;
  width: 4px;
  background: inherit;
  border-radius: 2px;
  animation: queuePulse 1.5s infinite;
}

@keyframes queuePulse {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 152, 0, 0.4);
  }
  70% {
    box-shadow: 0 0 0 6px rgba(255, 152, 0, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(255, 152, 0, 0);
  }
}

/* Add these status-specific styles */
.uploadItem[data-status='pendingupload'] {
  background: rgba(255, 160, 0, 0.05);
}

.uploadItem[data-status='inprogress'],
.uploadItem[data-status='processing'] {
  background: rgba(33, 150, 243, 0.05);
}

/* Update the pulse animations */
.progressFill.pulse {
  animation: progressPulse 2s infinite;
  opacity: 0.8;
}

/* Status-specific progress bar colors */
.uploadItem[data-status='pendingupload'] .progressFill {
  background: #FFA000;
  width: 5% !important; /* Show minimal progress */
}

.uploadItem[data-status='inprogress'] .progressFill,
.uploadItem[data-status='processing'] .progressFill {
  background: #2196F3;
}

/* Add loading indicator for pending states */
.uploadItem[data-status='pendingupload'] .status::after,
.uploadItem[data-status='queued'] .status::after {
  content: '';
  display: inline-block;
  width: 4px;
  height: 4px;
  margin-left: 4px;
  border-radius: 50%;
  animation: loadingDots 1.4s infinite;
}

@keyframes loadingDots {
  0%, 20% { content: ''; }
  40% { content: '.'; }
  60% { content: '..'; }
  80%, 100% { content: '...'; }
} 