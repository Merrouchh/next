-- Create the comments table for video clips
CREATE TABLE IF NOT EXISTS public.clip_comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  clip_id BIGINT NOT NULL,
  user_id UUID NOT NULL,
  username TEXT NOT NULL,
  content TEXT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  
  -- Foreign key to clips table
  CONSTRAINT fk_clip_comments_clip_id
    FOREIGN KEY (clip_id)
    REFERENCES public.clips(id)
    ON DELETE CASCADE,
    
  -- Foreign key to users table
  CONSTRAINT fk_clip_comments_user_id
    FOREIGN KEY (user_id)
    REFERENCES auth.users(id)
    ON DELETE CASCADE
);

-- Add index for faster queries
CREATE INDEX IF NOT EXISTS idx_clip_comments_clip_id
  ON public.clip_comments(clip_id);

-- Add index for user comments
CREATE INDEX IF NOT EXISTS idx_clip_comments_user_id
  ON public.clip_comments(user_id);

-- Add RLS policies for secure access
ALTER TABLE public.clip_comments ENABLE ROW LEVEL SECURITY;

-- Policy for comment visibility - anyone can view comments on public clips
CREATE POLICY "Comments are viewable by everyone for public clips" ON public.clip_comments
  FOR SELECT
  USING (
    EXISTS (
      SELECT 1 FROM public.clips c
      WHERE c.id = clip_id
      AND c.visibility = 'public'
    )
  );

-- Policy for private clip comments - only visible to the owner of the clip
CREATE POLICY "Private clip comments are only viewable by the clip owner" ON public.clip_comments
  FOR SELECT
  USING (
    EXISTS (
      SELECT 1 FROM public.clips c
      WHERE c.id = clip_id
      AND c.visibility = 'private'
      AND c.user_id = auth.uid()
    )
  );

-- Policy for inserting comments - authenticated users can add comments
CREATE POLICY "Users can add comments" ON public.clip_comments
  FOR INSERT
  WITH CHECK (auth.uid() = user_id);

-- Policy for updating comments - users can only update their own comments
CREATE POLICY "Users can update their own comments" ON public.clip_comments
  FOR UPDATE
  USING (auth.uid() = user_id);

-- Policy for deleting comments - users can only delete their own comments
CREATE POLICY "Users can delete their own comments" ON public.clip_comments
  FOR DELETE
  USING (auth.uid() = user_id); 